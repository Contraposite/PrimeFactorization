#: kivy 2.0.0

<Graph>:
    tick_color: (0.08,0.08,0.13,1)
    border_color: self.tick_color

<Label>:
    color: app.theme.secondary
    font_name: 'CONSOLA_FONT'
        
<TimeButton@Label>:
    num:0
    size_hint: 1,1
    text: ''
    canvas.before:
        Color:
            rgba: app.theme.background
        Ellipse:
            pos: root.x+root.width*0.1, root.y+root.height*0.1
            size: min(root.width*0.8, root.height*0.8), root.height*0.8
        Color:
            rgba: (6,0.1,0.15,1) if self.parent.value*10 < 10-self.num else (0,0,0,0)
        Ellipse:
            pos: root.x+root.width*0.2, root.y+root.height*0.2
            size: min(root.width*0.6, root.height*0.6), root.height*0.6
        Color:
            rgba: (1,1,1,0.3) if self.parent.value*10 < 10-self.num else (0,0,0,0)
        Ellipse:
            pos: root.x+root.width*0.4, root.y+root.height*0.4
            size: min(root.width*0.25, root.height*0.25), root.height*0.25        
                
<TextLabel>:
    multiline: False
    text_size: self.size
    font_size: min( self.height*0.8, self.width/(0.1+0.6*len(self.text)) )
    valign: "middle"
        
<LeaderboardTextLabel@TextLabel>:
    font_size: min(self.height*0.8, ( self.height*self.width / (1+ len(self.text)) )**0.5 )
    halign: "right"
    size_hint: 1,None
    height: self.parent.width*0.1 if self.parent!=None else 100
    canvas.before:
        Color:
            rgba: app.theme.mix(app.theme.primary, app.theme.background)
        RoundedRectangle:
            pos: self.x+2, self.y+2
            size: self.texture_size[0]-4, self.height-4
            radius: [root.height*0.15,]

<BackgroundTextLabel@TextLabel>:
    font_size: ( self.height*self.width / (1+ len(self.text)) )**0.5
    canvas.before:
        Color:
            rgba: app.theme.mix(app.theme.primary, app.theme.background)
        RoundedRectangle:
            pos: self.x+2, self.y+2
            size: self.texture_size[0]-4, self.height-4
            radius: [root.height*0.15,]
                
<FactorBox@TextLabel>:
    size_hint: None,1
    width: self.height * (0.5 + 0.5*len(self.text))
    halign: "center"
    color: app.theme.background
    canvas.before:
        Color:
            rgba: app.theme.secondary
        RoundedRectangle:
            pos: self.x+2, self.y+2
            size: self.width-4, self.height-4
            radius: [self.height*0.3,]
                
<RunningInputBox@TextLabel>:
    size_hint: None,1
    width: root.height * (0.5 + 0.5*len(self.text))
    halign: "center"
    color: app.theme.secondary if len(self.text)>0 else (0,0,0,0)
    canvas.before:
        Color:
            rgba: app.theme.primary if len(self.text)>0 else (0,0,0,0)
        RoundedRectangle:
            pos: self.x+2, self.y+2
            size: self.width-4, self.height-4
            radius: [self.height/2,]
                
<MultilineTextLabel>:
    multiline: True
    text_size: self.size
    font_size: ( self.height*self.width / (1+ len(self.text)) )**0.5
    valign: "top"

<Button>:
    #text_size: self.size
    halign: "center"
    valign: "middle"
    
<RoundedButton@Button>:
    font_size: min( self.height*0.6, self.width/(1+0.6*len(self.text)) )
    background_color: 0,0,0,0
    canvas.before:
        Color:
            rgba: app.theme.mix(app.theme.primary,app.theme.background) if self.state=='normal' else app.theme.light(app.theme.primary)
        RoundedRectangle:
            pos: self.x+2, self.y+2
            size: self.width-4, self.height-4
            radius: [root.height*0.075,]
        Color:
            rgba: app.theme.primary if self.state=='normal' else app.theme.light(app.theme.primary)
        RoundedRectangle:
            pos: self.x+8, self.y+8
            size: self.width-8*2, self.height-8*2
            radius: [root.height*0.075,]        

<InfoGroup@GridLayout>
    active: False
    info: 'hi there. if you are seeing this text, it\'s probably because Jonathan forgot to set the actual text which is supposed to go here. oh dear.'
    cols:1
    canvas.before:
        Color:
            rgba: app.theme.mix(app.theme.primary, app.theme.background)
        RoundedRectangle:
            pos: self.x, self.y+2
            size: root.width*0.99, root.height-4
            radius: [0,self.height*0.02,self.height*0.02,0]
                
    Button:
        active: root.active
        background_color: (0,0,0,0)
        color: (1,1,1,1)    
        text: 'i' if not self.active else root.info
        font_size: root.width*0.05 if not self.active else root.width*0.06
        multiline: True
        size_hint_y: None
        text_size: root.width, None
        height: self.texture_size[1]+10
        canvas.before:
            Color:
                rgba: (0.36,0.67,0.87,0.5) if not self.active else (0,0,0,0)
            Ellipse:
                pos: self.x+self.width/2 -(self.height-4)/2, self.y+self.height/2 -(self.height-4)/2
                size: self.height-4, self.height-4
        on_press:
            root.active = not root.active
            app.SM.current_screen.refresh_scatterplots()

                        
<GraphSearch@GridLayout>:
    search_func: None #add reference to the python function which returns the result text
    search_prop: ''
        
    cols:3
    size_hint_y: None
    height: root.width*0.1
    canvas.before:
        Color:
            rgba: (0.35,0.4,0.375,1)
        RoundedRectangle:
            pos: self.x+2, self.y+2
            size: self.width-4, self.height-4
            radius: [self.height/2]
    Label:
        valign: "middle"
        font_size: min( self.height*0.8, self.width/(0.1+0.6*len(self.text)) )
        text: 'search ' + root.search_prop + ':'
        color: (0.1,0.2,0.05,1)
    TextInput:
        size_hint_x: None
        width: root.width*0.2
        background_color: app.theme.light( app.theme.primary )
        multiline: False
        on_text_validate:
            result.text = root.search_func(self.text)
            self.text = ''
            self.focus = True
            self.select_all()
    Label:
        id:result
        valign: "middle"
        font_size: min( self.height*0.8, self.width/(0.1+0.6*len(self.text)) )
        text: ''
        color: (0.1,0.2,0.05,1)
    
    
    
    
    
    
    
    



<MyGrid>:
    name: "game_screen"

    FloatLayout:
                        
        GridLayout:
            id:grid1
            size: root.width, root.height
            cols:1
            
            GridLayout:
                size_hint_y: 2
                cols:1
                canvas.before:
                    Color:
                        rgba: app.theme.primary
                    RoundedRectangle:
                        pos: self.x, self.y+1
                        size: self.width*0.95, self.height-2
                        radius: [0,self.height*0.2,self.height*0.2,0]
                            
                TextLabel:
                    text: "Target:"
                    size_hint_y: 1
                
                FloatLayout:
                    canvas.before:
                        Color:
                            rgba: (1,1,1,0.5)
                        Rectangle:
                            size: self.size
                            pos: self.pos
                    size_hint: None,None
                    height:0
                    Label: #shadow
                        multiline: False
                        text_size: target.text_size
                        font_size: target.font_size
                        valign: "middle"
                        text: target.text
                        size_hint: None,None
                        size: target.size
                        pos: target.x-target.height*0.05,target.y-target.height*0.05
                        color: (0,0,0,0.5)

                Label:
                    id: target
                    multiline: False
                    valign: "middle"
                    size_hint_y: 3
                    text: self.text
                    text_size: self.size
                    font_size: min( self.height*1, self.width/(0.1+0.6*len(self.text)) )
                
                GridLayout:
                    cols: 2
                    size_hint: 1,None
                    height: root.width*0.075
                    GridLayout:
                        id: time_display
                        size_hint: None, 1
                        width: root.width*0.8
                        cols: 10
                        value: 0
                        TimeButton:
                            num:1
                        TimeButton:
                            num:2
                        TimeButton:
                            num:3
                        TimeButton:
                            num:4
                        TimeButton:
                            num:5
                        TimeButton:
                            num:6
                        TimeButton:
                            num:7
                        TimeButton:
                            num:8
                        TimeButton:
                            num:9
                    Label: #blank space to right
                        text: ''
                    Label: #blank space below
                        text: ''
                        size_hint_y: None
                        height: root.width*0.01

            TextLabel:
                text: "Prime Factors:"
                size_hint_y: 0.3

            GridLayout:
                cols:2
                size_hint_y: 0.5

                StackLayout:
                    id: factor_stack
                    size_hint_x: 4
                    orientation: 'lr-tb'
                
                RunningInputBox:
                    id: running_input
                    text: self.text
                    halign: "center"
            
            Graph:
                id: TTS_graph
                border_color: app.theme.primary
                xlabel: "level"
                ylabel: "time"
                size_hint_y: 1

            GridLayout:
                cols:4
                size_hint_y: 0.5

                RoundedButton:
                    id: instructions_btn
                    text: "i"
                    background_normal: ''
                    background_color: (0.36,0.67,0.87)
                    color: (1,1,1,1)
                    font_size: min( self.height*0.95, self.width )
                    on_press: root.show_info()
                    size_hint_x: 0.25

                RoundedButton:
                    id: stats_btn
                    text: 'menu'
                    on_press: root.show_menu()

                BackgroundTextLabel:
                    text: 'mode:'
                    halign: "right"

                RoundedButton:
                    id: mode_btn
                    on_press: root.cycle_mode()
                
            GridLayout:
                cols:2
                size_hint_y: None
                height: root.height*0.25

                RoundedButton:
                    id: 0
                    size_hint_x: 0.225
                    text: "0"
                    on_press:
                        root.submit(self.text)

                GridLayout:
                    cols:3

                    #size_hint_y: 2.2

                    RoundedButton:
                        id: 1
                        text: "1"
                        on_press:
                            root.submit(self.text)
                    RoundedButton:
                        id: 2
                        text: "2"
                        on_press:
                            root.submit(self.text)
                    RoundedButton:
                        id: 3
                        text: "3"
                        on_press:
                            root.submit(self.text)
                    RoundedButton:
                        id: 4
                        text: "4"
                        on_press:
                            root.submit(self.text)
                    RoundedButton:
                        id: 5
                        text: "5"
                        on_press:
                            root.submit(self.text)
                    RoundedButton:
                        id: 6
                        text: "6"
                        on_press:
                            root.submit(self.text)
                    RoundedButton:
                        id: 7
                        text: "7"
                        on_press:
                            root.submit(self.text)
                    RoundedButton:
                        id: 8
                        text: "8"
                        on_press:
                            root.submit(self.text)
                    RoundedButton:
                        id: 9
                        text: "9"
                        on_press:
                            root.submit(self.text)

        TextLabel:
            id: target_fx
            text: "0"
            size_hint: None,None


                
<GameOver>:
    name: "game_over_screen"
        
    info_to_display: info_to_display
        
    GridLayout:
        cols:1
    
        TextLabel:
            text: "Game Finished"
            halign: "center"
            size_hint_y: 0.2
    
        ScrollView:
            #size: root.width, root.height
            do_scroll_x: False
            do_scroll_y: True

            GridLayout: #scrolling stuff
                size_hint_y: None
                height: self.minimum_height
                cols: 1
                
                GridLayout: #row of score + stats
                    size_hint_y: None
                    height: root.width*0.4
                    cols: 2
                    
                    AnchorLayout: #score bubble anchor wrapper
                        id:score_anchor
                        size_hint_x: 0.5
                        size_hint_y: 1
                        anchor_x: 'center'
                        anchor_y: 'center'
                        GridLayout: #stuff in the score bubble
                            cols: 1
                            size_hint_y: None
                            height: score_anchor.width
                            canvas.before:
                                Color:
                                    rgba: app.theme.primary
                                Ellipse:
                                    size: self.size
                                    pos: self.pos
                            Label:
                                size_hint_y:0.3
                                text: 'score:'
                                text_size: self.size
                                font_size: min( self.height*0.75, self.width/(0.1+0.6*len(self.text)) )
                                valign: "bottom"
                                halign: 'center'
                            TextLabel:
                                id: last_game_score
                                text: ''
                                text_size: self.size
                                font_size: min( self.height*0.85, self.width/(0.1+0.6*len(self.text)) )
                                valign: "top"
                                halign: 'center'

                    BackgroundTextLabel:
                        id: info_to_display
                        target: ''
                        factors_so_far: ''
                        user_in: ''
                        answer: ''
                        text_size: self.size[0]*0.9, self.size[1]
                        text: 'target: ' + self.target + '\nfactors so far: \n' + self.factors_so_far + '\nyour input: ' + self.user_in + '\ncorrect answer: \n' + self.answer
                        font_size: 0.8*( self.height*self.width / (1+ len(self.text)) )**0.5

                InfoGroup:
                    id:game_over_group1
                    info: 'This graph shows your progression at solving the targets, as time progresses during your game. You should see that your score increases (the graph goes higher up) as time progressed while you were playing the game (reading the graph from left to right). A steep line indicates that you were solving your targets quickly. A shallow line indicates that you were solving your targets slowly. The blue graph represents the game that you just finished playing. The red graph represents the best game you ever played (this is saved on your device for later). If there is no red graph, it is because your last game was your best one yet.'
                    size_hint_y: None
                    height: self.minimum_height
                    Graph:
                        id: ST_graph
                        border_color: app.theme.primary
                        xlabel: "game time (s)"
                        ylabel: "score"
                        size_hint_y: None
                        height: root.width*0.6

        RoundedButton:
            size_hint_y: None
            height: root.height*0.2
            text: "Reset"
            on_press:
                root.restart()
                game_over_group1.active = False
                
                
                
                
                
<info>:
    name: "info_screen"
        
    GridLayout:
        size: root.width, root.height
        cols: 1
            
        MultilineTextLabel:
            text: "Instructions:\nPress the prime factors of the target number, in order from smallest to largest.\ne.g. if your target is 66, the prime factors are 2, 3, and 11 (since these are the prime numbers which multiply to make 66). so you would press 2 3 1 1.\nThe size of the target numbers increases as time progresses from the game start, so answering quickly will allow you to get more small targets.\nHit the mode button to toggle between normal and training modes. Training mode gives you targets that you often don't solve, based on your play history. No data is saved from your games in training mode."
            #valign: "middle"
            font_size: 1.15*( self.height*self.width / (1+ len(self.text)) )**0.5
            size_hint_y: 0.8

        MultilineTextLabel:
            text: "This game is fully free, with no ads or in-game purchases. If you enjoy it, please consider leaving feedback or suggestions on the Google Play store."
            #valign: "middle"
            font_size: 1.15*( self.height*self.width / (1+ len(self.text)) )**0.5
            size_hint_y: 0.2

        RoundedButton:
            size_hint_y: None
            height: root.height*0.1
            text: "view on play store"
            on_press: root.search('https://play.google.com/store/apps/details?id=com.jf.primefactorizer')
            
        RoundedButton:
            size_hint_y: None
            height: root.height*0.2
            text: "Play"
            on_press: root.restart()
                
                

        
                
<stats>:
    name: "stats_screen"
    
    GridLayout:
        cols:1
    
        ScrollView:
            #size: root.width, root.height
            do_scroll_x: False
            do_scroll_y: True

            GridLayout:
                size_hint_y: None
                height: self.minimum_height
                cols:1
                
                
                InfoGroup:
                    info: "You can leave this blank to view your stats (as they are stored locally on this device) or enter a player ID to view the stats and graphs of that player (as they are stored on the cloud). Press 'return' on your on-screen keyboard to apply your input."
                    size_hint_y: None
                    height: self.minimum_height
                    GridLayout:
                        cols:3
                        size_hint_y: None
                        height: root.width*0.1
                        BackgroundTextLabel:
                            text: 'player id:'
                            size_hint: 1,1
                        TextInput:
                            id: player_id
                            size_hint: 1,1
                            write_tab: False
                            font_size: min(self.height*0.6, ( self.height*self.width / (1+ len(self.text)) )**0.6 )
                            background_color: app.theme.light( app.theme.primary )
                            multiline: False
                            on_text_validate:
                                root.update_info(self.text)
                        TextLabel:
                            text: ''
                            size_hint_x: 0.2
                
                BackgroundTextLabel:
                    id: highscore
                    score: ''
                    time: ''
                    text: 'high score: ' + self.score + '\nat ' + self.time + ' sec'
                    size_hint: None,None
                    height: root.width*0.3
                    width: root.width
                    
                InfoGroup:
                    id:stats_group1
                    info: 'This graph shows your progression at solving the targets, as time progressed during your best game. You should see that your score increases (the graph goes higher up) as time progressed while you were playing the game (reading the graph from left to right). A steep line indicates that you were solving your targets quickly. A shallow line indicates that you were solving your targets slowly.'
                    size_hint_y: None
                    height: self.minimum_height
                    Graph:
                        id: best_ST_graph
                        border_color: app.theme.primary
                        xlabel: "game time (s)"
                        ylabel: "score"
                        size_hint_y: None
                        height: root.width*0.6
                            
                    GraphSearch:
                        search_func: root.search_1
                        search_prop: 'score'
                    
                InfoGroup:
                    id:stats_group2
                    info: 'This graph shows what portion of your attempts were successful, for each target number. You must have had a few attempts at the target for it to show up on this graph. If a dot is high up, that means that you have a very good success rate for that target number. Use this graph to see which targets you struggle with.'
                    size_hint_y: None
                    height: self.minimum_height
                    Graph:
                        id: WRN_graph
                        border_color: app.theme.primary
                        xlabel: "target"
                        ylabel: "win rate"
                        size_hint_y: None
                        height: root.width*0.6

                    GraphSearch:
                        search_func: root.search_2
                        search_prop: 'target'
                            
                    Label:
                        id: low_win_rate_targets
                        multiline: False
                        text_size: self.size
                        text: ''
                        size_hint: None,None
                        rows:1
                        height: root.width*0.2 + root.width*0.1*self.rows
                        width: root.width
                        font_size: 0.8*self.height/(self.rows+1)
                        valign: "middle"

                InfoGroup:
                    id:stats_group3
                    info: 'This graph shows you how long, on average, you take to complete each target number. This does not include data for when targets are incomplete and time runs out - only for when you successfully completed the target. If a dot is high up, that means that you take a long time to solve that target. Use this graph to see which targets take you the most time to solve.'
                    size_hint_y: None
                    height: self.minimum_height
                    Graph:
                        id: TN_graph
                        border_color: app.theme.primary
                        xlabel: "target"
                        ylabel: "avg time (s)"
                        size_hint_y: None
                        height: root.width*0.6

                    GraphSearch:
                        search_func: root.search_3
                        search_prop: 'target'
                            
                            
        RoundedButton:
            size_hint_y: None
            height: root.height*0.2
            text: "back"
            on_press:
                root.change_screen('menu_screen')
                stats_group1.active=False
                stats_group2.active=False
                stats_group3.active=False
                
                
                
                
<login>:
    name: "login_screen"
    
    GridLayout:
        cols:1
        
        BackgroundTextLabel:
            text: 'email (must be email address format):'
        
        TextInput:
            id: email
            write_tab: False
            font_size: self.width*0.05
            background_color: app.theme.light( app.theme.primary )
            multiline: False

        BackgroundTextLabel:
            text: 'password (must not be too weak):'
        
        TextInput:
            id: password
            write_tab: False
            font_size: self.width*0.05
            background_color: app.theme.light( app.theme.primary )
            multiline: False
            on_text_validate:
                root.submit_login(email.text, password.text)
        
        GridLayout:
            cols:2
            RoundedButton:
                text: 'login'
                on_press:
                    root.submit_login(email.text, password.text)
            RoundedButton:
                text: 'sign up'
                on_press:
                    root.submit_login(email.text, password.text, signing_up=True)
                
        RoundedButton:
            text: 'skip'
            on_press:
                root.change_screen('game_screen')
                
                
                
<menu>:
    name: "menu_screen"
    
    GridLayout:
        cols:1
                  
        RoundedButton:
            text: 'log in'
            on_press:
                root.change_screen('login_screen')
                
        RoundedButton:
            text: 'profile'
            on_press:
                root.change_screen('profile_screen')
                
        RoundedButton:
            text: 'stats'
            on_press:
                root.change_screen('stats_screen')
                
        RoundedButton:
            text: 'leaderboard'
            on_press:
                root.change_screen('leaderboard_screen')
                
        RoundedButton:
            text: 'play'
            on_press:
                root.change_screen('game_screen')

                
                
<profile>:
    name: "profile_screen"
    
    GridLayout:
        cols:1
            
        BackgroundTextLabel:
            text: 'your player id'

        TextLabel:
            id:player_id
            text: ''
            #font_size: self.height*0.6
            
        BackgroundTextLabel:
            text: 'public name (alphabetical only)'
                
        TextInput:
            id: public_name
            write_tab: False
            font_size: self.width*0.05
            background_color: app.theme.light( app.theme.primary )
            multiline: False
            on_text_validate:
                root.set_public_name(self.text)
    
        RoundedButton:
            text: 'back'
            on_press:
                root.change_screen('menu_screen')
                
                
<leaderboard>:
    name: "leaderboard_screen"
    
    ScrollView:
        #size: root.width, root.height
        do_scroll_x: False
        do_scroll_y: True

    
        GridLayout:
            size_hint_y: None
            height: self.minimum_height
            cols:1

            InfoGroup:
                info: 'This graph overlays the best games of the top 10 players on the leaderboard.'
                size_hint_y: None
                height: self.minimum_height
                Graph:
                    id: leaderboard_graph
                    border_color: app.theme.primary
                    xlabel: "time (s)"
                    ylabel: "score"
                    size_hint_y: None
                    height: root.width*0.6
                
            GridLayout:
                id: leaderboard_grid
                size_hint_y: None
                height: self.minimum_height
                cols:4 #place, name, id, score

                BackgroundTextLabel:
                    text: 'place'
                    halign:'center'
                    size_hint: 1,None
                    height: root.width*0.1
                BackgroundTextLabel:
                    text: 'name'
                    halign:'center'
                    size_hint: 1,None
                    height: root.width*0.1
                BackgroundTextLabel:
                    text: 'player id'
                    halign:'center'
                    size_hint: 1,None
                    height: root.width*0.1
                BackgroundTextLabel:
                    text: 'score'
                    halign:'center'
                    size_hint: 1,None
                    height: root.width*0.1

    RoundedButton:
        size_hint_y: None
        height: root.height*0.2
        text: "back"
        on_press:
            root.change_screen('menu_screen')
